@page
@model FAL.FrontEnd.Pages.Dashboard.MainModel
@{
}
<head>
<style>
        /* Hiệu ứng khi hover vào thẻ <a> */
        .link-hover-effect {
            position: relative;
            display: inline-block;
            transition: all 0.3s ease; /* Thêm hiệu ứng chuyển tiếp */
            cursor: pointer;  /* Chuyển con trỏ thành tay khi hover */
        }

        /* Hiệu ứng hover: đổi màu, phóng to và lắc lư */
        .link-hover-effect:hover {
            transform: scale(1.1); /* Phóng to khi hover */
            color: #007bff; /* Màu sắc thay đổi khi hover */
            text-decoration: none; /* Đảm bảo không có gạch chân */
            animation: shake 0.5s ease; /* Thêm hiệu ứng lắc lư */
        }

        /* Hiệu ứng lắc lư */
        @@keyframes shake {
            0% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            50% { transform: translateX(5px); }
            75% { transform: translateX(-5px); }
            100% { transform: translateX(0); }
        }

        /* Hiệu ứng bóng đổ */
        .link-hover-effect:hover i {
            transition: all 0.3s ease-in-out;
        }

        /* Tooltip khi hover */
        .link-hover-effect::after {
            content: "Click here to go to detail";  /* Gợi ý nhấn */
            position: absolute;
            top: -30px;
            left: 150px;
            transform: translateX(-50%);
            background-color: rgba(0, 123, 255, 0.8);
            color: #fff;
            width: 200px;
            padding: 5px;
            border-radius: 5px;
            font-size: 12px;
            visibility: hidden;  /* Ẩn tooltip mặc định */
            opacity: 0;
            transition: visibility 0s, opacity 0.3s ease;
        }

        /* Hiển thị tooltip khi hover */
        .link-hover-effect:hover::after {
            visibility: visible;
            opacity: 1;
        }
</style>
</head>
<div class="container">
    <h1 class="text-center mb-5">Detection Dashboard</h1>

    <form asp-controller="YourController" asp-action="YourAction" method="get" class="mb-4">
        <div class="d-flex align-items-center">
            <label for="yearSelect" class="form-label fw-bold me-3">Select Year:</label>
            <select id="yearSelect" name="year" onchange="this.form.submit()" class="form-select w-auto">
                @foreach (var year in Model.Years)
                {
                    if (year == Model.CurrentYear)
                    {
                        <option value="@year" selected>@year</option>
                    }
                    else
                    {
                        <option value="@year">@year</option>
                    }
                }
            </select>
        </div>
    </form>
    <div class="row g-4">
        <!-- Card 1 -->
        <div class="col-12 col-md-6 col-lg-6">
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <a asp-page="/Dashboard/Detect" class="text-decoration-none link-hover-effect">
                        <i class="fas fa-search fs-1 text-primary"></i>
                    </a>
                    <h2 class="card-title my-3">@Model.TotalDetect</h2>
                    <p class="card-text text-muted">Total Detection Requests</p>
                    <div class="my-3">
                        <canvas id="barChart"></canvas>
                    </div>
                    <h5 class="mt-4">The 5 latest data about detect media</h5>
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>File Name</th>
                                    <th>System Name</th>
                                    <th>Create Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.DetectStats?.LatestRows != null && Model.DetectStats.LatestRows.Any())
                                {
                                    @foreach (var row in Model.DetectStats.LatestRows)
                                    {
                                        <tr>
                                            <td>@row.FileName</td>
                                            <td>@row.SystemName</td>
                                            <td>@row.CreateDate.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="3" class="text-center">No data available</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Card 2 -->
        <div class="col-12 col-md-6 col-lg-6">
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <a asp-page="/Dashboard/Train" class="text-decoration-none link-hover-effect">
                        <i class="fas fa-users fs-1 text-success"></i>
                    </a>
                    <h2 class="card-title my-3">@Model.TotalTrain</h2>
                    <p class="card-text text-muted">Total People Trained</p>
                    <div class="my-3">
                        <canvas id="lineChart"></canvas>
                    </div>
                    <h5 class="mt-4">The 5 latest data about train people</h5>
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>UserId</th>
                                    <th>FaceId</th>
                                    <th>Create Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.TrainStats?.LatestRows != null && Model.TrainStats.LatestRows.Any())
                                {
                                    @foreach (var row in Model.TrainStats.LatestRows)
                                    {
                                        <tr>
                                            <td>@row.UserId</td>
                                            <td>@row.FaceId</td>
                                            <td>@row.CreateDate.ToString("yyyy-MM-dd HH:mm:ss")</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="3" class="text-center">No data available</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Card 3 -->
        <div class="col-12 col-md-6 col-lg-6">
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <a asp-page="/Dashboard/Request" class="text-decoration-none link-hover-effect">
                        <i class="fas fa-envelope fs-1 text-warning"></i>
                    </a>
                    <h2 class="card-title my-3">@Model.TotalRequest</h2>
                    <p class="card-text text-muted">Total Requests</p>
                    <div class="my-3">
                        <canvas id="pieChart"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <!-- Card 4 -->
        <div class="col-12 col-md-6 col-lg-6">
            <div class="card shadow-sm">
                <div class="card-body text-center">
                    <h2 class="card-title my-3">@Model.TotalCollection</h2>
                    <p class="card-text text-muted">Total Collection Information</p>
                    <div class="my-3">
                        <canvas id="barChart1"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Bar Chart for Total Detection Requests
        const barCtx = document.getElementById('barChart')?.getContext('2d');
        if (!barCtx) {
            console.error("Không tìm thấy phần tử 'barChart'.");
        }

        const monthCounts = @Html.Raw(Json.Serialize(Model.DetectStats.MonthCounts));

        // Kiểm tra dữ liệu
        if (!monthCounts || typeof monthCounts !== 'object') {
            console.error("Dữ liệu monthCounts không hợp lệ:", monthCounts);
        } else {
            // Chuyển đổi dữ liệu thành mảng
            const monthData = Object.values(monthCounts);
            const maxValue = Math.max(...monthData);

            // Tô màu cột
            const backgroundColors = monthData.map(value =>
                value === maxValue ? 'rgba(255, 0, 0, 0.7)' : 'rgba(0, 123, 255, 0.7)'
            );

            // Tạo biểu đồ
            const barChart = new Chart(barCtx, {
                type: 'bar',
                data: {
                    labels: ['January', 'February', 'March', 'April', 'May', 'June',
                        'July', 'August', 'September', 'October', 'November', 'December'],
                    datasets: [{
                        label: 'Detection Requests',
                        data: monthData,  // Bind dữ liệu
                        backgroundColor: backgroundColors,  // Tô màu tùy theo giá trị
                        borderColor: 'rgba(0, 123, 255, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    plugins: {
                        title: {
                            display: true,
                            text: 'Monthly Detection Requests',
                            position: 'bottom',  // Đưa tiêu đề xuống dưới
                            font: {
                                size: 16,  // Tăng kích thước chữ nếu cần
                                weight: 'bold'
                            },
                            color: '#333'  // Màu chữ tiêu đề
                        }
                    },
                    animation: {
                        duration: 2000,  // Animation khi hiển thị
                        easing: 'easeInOutBounce'
                    }
                }
            });
        }


        // Line Chart for Total People Trained
        const lineCtx = document.getElementById('lineChart').getContext('2d');
        const monthCountTrains = @Html.Raw(Json.Serialize(Model.TrainStats.MonthCounts));

        const lineChart = new Chart(lineCtx, {
            type: 'line',
            data: {
                datasets: [{
                    label: 'People Trained',
                    data: monthCountTrains,
                    backgroundColor: 'rgba(40, 167, 69, 0.3)',
                    borderColor: 'rgba(40, 167, 69, 1)',
                    borderWidth: 2,
                    fill: true
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                plugins: {
                    title: {
                        display: true,
                        text: 'Monthly Train Requests',
                        position: 'bottom',  // Đưa tiêu đề xuống dưới
                        font: {
                            size: 16,  // Tăng kích thước chữ nếu cần
                            weight: 'bold'
                        },
                        color: '#333'  // Màu chữ tiêu đề
                    }
                },
                animation: {
                    duration: 2000,  // Animation khi hiển thị
                    easing: 'easeInOutBounce'
                }
            }
        });

        // Pie Chart for Total Requests Status
        const pieCtx = document.getElementById('pieChart').getContext('2d');
        const requestStats = @Html.Raw(Json.Serialize(Model.RequestStats));
        const pieChart = new Chart(pieCtx, {
            type: 'pie',
            data: {
                labels: ['Train', 'Detect', 'Compare'],
                datasets: [{
                    label: 'Request Stats',
                    data: [requestStats.train, requestStats.detect, requestStats.compare],
                    backgroundColor: [
                        'rgba(0, 123, 255, 0.7)',  // Train
                        'rgba(255, 193, 7, 0.7)',  // Detect
                        'rgba(220, 53, 69, 0.7)'   // Compare
                    ],
                    borderColor: [
                        'rgba(0, 123, 255, 1)',
                        'rgba(255, 193, 7, 1)',
                        'rgba(220, 53, 69, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    title: {
                        display: true,
                        text: 'Request Statistics Overview'
                    }
                }
            }
        });




        // Bar Chart for Total Detection Requests
        const barCtx1 = document.getElementById('barChart1')?.getContext('2d');
        if (!barCtx1) {
            console.error("Không tìm thấy phần tử 'barChart1'.");
        }

        const monthCounts1 = @Html.Raw(Json.Serialize(Model.CollectionChartStats));

        // Kiểm tra dữ liệu
        if (!monthCounts1 || typeof monthCounts1 !== 'object') {
            console.error("Dữ liệu monthCounts không hợp lệ:", monthCounts1);
        } else {
            // Tạo biểu đồ
            const barChart1 = new Chart(barCtx1, {
                type: 'bar',
                data: {
                    datasets: [{
                        label: 'Collection Infor',
                        data: monthCounts1,  // Bind dữ liệu
                        backgroundColor: 'rgba(0, 123, 255, 1)',  // Tô màu tùy theo giá trị
                        borderColor: 'rgba(0, 123, 255, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    },
                    plugins: {
                        title: {
                            display: true,
                            text: 'Collection Information',
                            position: 'bottom', 
                            font: {
                                size: 16,
                                weight: 'bold'
                            },
                            color: '#333'  
                        }
                    },
                    animation: {
                        duration: 2000, 
                        easing: 'easeInOutBounce'
                    }
                }
            });
        }
    });
</script>
